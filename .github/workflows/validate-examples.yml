name: Validate AsyncAPI Examples

on:
  push:
    branches:
      - master
      - script-ci-spec-validation # added temporarily for testing purpose
      - testExamples # added temporarily for testing purpose

  pull_request_target:
    types: [opened, reopened, synchronize, edited, ready_for_review]

  workflow_dispatch:
    inputs:
      name:
        description: 'Enter something'
        required: true

jobs:
  validate-examples:
    name: Validate Spec Examples - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - if: >
          !github.event.pull_request.draft && !(
            (github.actor == 'asyncapi-bot' && (
              startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') || 
              startsWith(github.event.pull_request.title, 'chore(release):')
            )) ||
            (github.actor == 'asyncapi-bot-eve' && (
              startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') || 
              startsWith(github.event.pull_request.title, 'chore(release):')
            )) ||
            (github.actor == 'allcontributors[bot]' && 
              startsWith(github.event.pull_request.title, 'docs: add')
            )
          )
        id: should_run
        name: Should Run
        run: echo "shouldrun=true" >> $GITHUB_OUTPUT
      - if: steps.should_run.outputs.shouldrun == 'true' 
        name: Set git to use LF #to once and for all finish neverending fight between Unix and Windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - if: steps.should_run.outputs.shouldrun == 'true' 
        name: Checkout repository
        uses: actions/checkout@v3
      - if: steps.should_run.outputs.shouldrun == 'true' 
        name: Check if Node.js project and has package.json
        id: packagejson
        run: test -e ./package.json && echo "exists=true" >> $GITHUB_OUTPUT || echo "exists=false" >> $GITHUB_OUTPUT
        shell: bash
      - if: steps.packagejson.outputs.exists == 'true'
        name: Check package-lock version
        uses: asyncapi/.github/.github/actions/get-node-version-from-package-lock@master
        id: lockversion
      - if: steps.packagejson.outputs.exists == 'true'
        name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.lockversion.outputs.version }}"
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - if: steps.packagejson.outputs.exists == 'true'
        name: Install dependencies
        id: first-installation
        run: npm install --loglevel verbose
        continue-on-error: true
      - if: steps.first-installation.outputs.status == 'failure' && steps.packagejson.outputs.exists == 'true'
        name: Clear NPM cache and install deps again
        run: | 
          npm cache clean --force
          npm install --loglevel verbose
      - if: steps.packagejson.outputs.exists == 'true'
        name: Validate examples
        run: find ./examples/* -type f -name '*.yml' -or -name '*.yaml' -not -path './examples/social-media/common/*' | xargs -P 10 -L 1 npx asyncapi validate
